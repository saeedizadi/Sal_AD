%May 1 2015
%%
%An example of how to use the implemented function for obtaing the experts accuracy.
%In the 'Maps' folder, there are several maps generated by different methods(17 maps per unique image)
%The filename of maps are like '862_AC','862_GB', '862_CA' and etc. so that the first part indicates the ID of the maps and the second part the method.
%To obtain the accuracy of experts, you must pass the ID of the desired maps, i.e. 862 as the argument to the function.
%The function will generate a bar to visualize the estimate accuracy of experts and will return the numerical values in the 'predConf' variable
%In addition, the maps will be rewrited into the folder 'Maps_Ranking' in
%the descending order of  their estimated accuracy, that is the first maps has the maximum accuracy and the last one has the least.
%%

% %Delete the files in
% delete('Maps_Ranking\*.png');
clc;
clear;

mapsPath=dir(['./maps/' '*.png']);

numOfImgs = 1;

% AUCs = zeros(1,numOfImgs);
% NSSs = zeros(1,numOfImgs);
% CCs = zeros(1,numOfImgs);

%threshold = [0.05 0.1 0.15 0.20 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8];

MapsAUCs = cell(1,numOfImgs);
ourMethod = cell(1,numOfImgs);

for iter=1:(numOfImgs)
    fprintf('%d out of %d',iter,numOfImgs);    
    
    %t = mapsPath((iter-1)*17+1).name;
    %ImgID = str2double(t(1:find(t == '_')-1));
    %names(iter) = ImgID;
    ImgID = 75;
    [predConf maps] = SaliencyAggregation2(ImgID);
    
    [~,indx] = sort(predConf,'descend');
    G = double(imread(['Images\' num2str(ImgID) '.png']));
    [row,col] = size(G);
    
    ourBestMap = maps(indx(1),:);
    ourBestMap = reshape(ourBestMap',row,col);
    
    
    
    MapsAUCs{iter} = EvaluateMethods(maps,G,row,col);
    
    ourMethod{iter}(i,:) = MapsAUCs{iter}(indx(1),:);
    
    
    %Compute the AUC method for all maps
    
    
    % Check how many times top-three of our method contains the best AUC
    %     AUCs = zeros(1,17);
    %     for i=1:17
    %         temp = double(reshape(maps(i,:)',row,col));
    %         AUCs(i) = AUC_Borji(temp,G);
    %     end
    %     [data1,indx1] = sort(AUCs,'descend');
    %     [data2,indx2] = sort(predConf,'descend');
    %
    % clc;
    % disp(['   AUC' '  Accuracy'])
    % disp('---------------------')
    % disp([indx1' indx2]);
    
    %Hit(iter) = ~isempty(find(indx2(1:3) == indx1(1)));
    tt = cat(3,MapsAUCs{:});
    %     a = mean(tt,3);
end
% auc = mean(AUCs);
% nss = mean(NSSs);
% cc = mean(CCs);
% % disp(['     AUC' '       NSS' '        CC'])
% % disp('----------------------------------')
% %
% % disp(a);
% % disp('----------------------------------')
% % disp([auc nss cc]);
% %disp('**************************************')

%
% performance = reshape(tt(:,1,:),[17 numOfImgs]);
% ttt = cat(3,ourMethod{:});
% thrPerf = reshape(ttt(:,1,:),[16 numOfImgs]);
% performance = [names;performance;thrPerf];
% %
% xlswrite('results.xls',performance);
%




